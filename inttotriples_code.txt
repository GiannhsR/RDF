 /*   /**  private HashMap<String[], Integer> triplesToInt = new HashMap<>();
            private static HashMap<Integer, String[]> intToTriples = new HashMap<>();

     * Creates a triples dictionary on specified path
     * by iterating over the triplesToInt map
     * @param dictionaryTriplesFilePath path of the dictionary
     *//*
    private void createTriplesDictionary(String dictionaryTriplesFilePath) {
        //System.out.println("Dic decode map entry set : + " + triplesToInt.entrySet());
        File file = null;

        System.out.println("Creating triples dictionary...\n");
        try {
            // Create new file

            file = new File(dictionaryTriplesFilePath);

            // If file doesn't exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);

            Iterator it = triplesToInt.entrySet().iterator();
            while (it.hasNext()) {
                Map.Entry pair = (Map.Entry) it.next();

                //System.out.println(pair.getKey() + " = " + pair.getValue());
                //it.remove(); //avoids a ConcurrentModificationException

                bw.write(pair.toString() + "\n");
            }

            // Close connection
            bw.close();
            System.out.println("--------------\n");
        } catch (IOException x) {
            System.out.println(x);
        }
         /**
     * Writes the encoded triples in a file
     * by iterating through the encodeFileMap
     * and getting its values
     * @param encodedTriplesFilePath  path of the file
     * @throws IOException  file may not exist/ be found
     */
/*
 private void encodeTriplesFile(String encodedTriplesFilePath) {
     System.out.println("Encoding triples...\n");
     try {
         // Create new file
         File file = new File(encodedTriplesFilePath);
         // If file doesn't exist, then create it
         if (!file.exists()) {
             file.createNewFile();
         }

         FileWriter fw = new FileWriter(file.getAbsoluteFile());
         BufferedWriter bw = new BufferedWriter(fw, (int)Math.pow(2,13));
         triplesToInt.entrySet().forEach(x -> {
             try {
                 bw.write(x.getValue() + "\n" );
             } catch (IOException e) {
                 System.err.format("IOException: %s%n", e);
             }
         });

            */
/*for (List<Integer> x : encodeFileMap.values()){
               // System.out.println("value is : " + s + "\n");
                bw.write(x + "\n");
            }*//*


         // Close connection
         bw.close();
     } catch (IOException x) {
         System.out.println(x);
     }
     System.out.println("------------------\n");
 }

    */
/**
     * Writes the decoded triples in a file
     * by reading the encoded triples from the encoded file
     * then generating the integer tokens
     * then finally write the decoded integers,now strings,in a file
     * @param encodedTriplesFilePath , file path from the encoded file (reads)
     * @param decodedTriplesFilePath , file path for the decoded file (writes)
     *//*

    private void decodeTriplesFile(String encodedTriplesFilePath,String decodedTriplesFilePath) {
        System.out.println("Decoding triples...\n");
        BufferedReader reader = null;
        BufferedWriter writer = null;
        String[] integerTokens;
        try {
            reader = new BufferedReader(new FileReader(encodedTriplesFilePath));
            writer = new BufferedWriter(new FileWriter(decodedTriplesFilePath));
            String line = null;
            while ((line = reader.readLine()) != null) {
                //System.out.println(line); //Current line, used for debugging
                line = removeCommaFromString(line);
                line = removeBracketsFromString(line);
                integerTokens = line.split("\\s");
                for (int i = 0; i < integerTokens.length; i++) {
                    //System.out.println(integerTokens[i]);//used for debugging
                    writer.write(intToTriples.get(Arrays.asList(integerTokens)) + "\n");
                }
            }
            reader.close();
            writer.close();
        } catch (IOException e) {
            System.err.format("IOException: %s%n", e);
        }
        System.out.println("----------------\n");
    }

        //Paths referring to : <s,p,o> --> 1
        String encodedTriplesFilePath = "watdiv10M\\encodedTriplesFile.txt";
        String dictionaryTriplesFilePath = "watdiv10M\\dictionaryTriples.txt";
        //String decodedTriplesFilePath = "watdiv10M\\decodedTriplesFile.txt";


            /**
     * Try to insert a (S[] key , I value ) pair
     * If the key doesn't exist, create the mapping and return true, mapping succeeded
     * Else return false, mapping already exists
     * @param key
     * @param value
     * @return true on success, false on already mapped pair
     */
/*private boolean insertIntoTriplesToIntMap(String[] key, int value){
    if(triplesToInt.get(key) == null){
        //System.out.println(key + " didn't exist.Creating entry.");
        triplesToInt.put(key,value);//MAP <S,P,O> ---> int
        intToTriples.put(value,key);//MAP int ---> <S,P,O>
    }else{
        //System.out.println(key + " exists.Mapped value is : " + triplesToInt.get(key));
        return  false;
    }
    return true;
}

 if( insertIntoTriplesToIntMap(triple,indexTriples)){
                    indexTriples++;
                }

                 private int indexTriples = 1; ////working as a starting (indexing) point for the TRIPLES
*/
